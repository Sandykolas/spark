-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 80


-- !query 0
select null, Null, nUll
-- !query 0 schema
struct<NULL:null,NULL:null,NULL:null>
-- !query 0 output
NULL	NULL	NULL


-- !query 1
select true, tRue, false, fALse
-- !query 1 schema
struct<true:boolean,true:boolean,false:boolean,false:boolean>
-- !query 1 output
true	true	false	false


-- !query 2
select 1Y
-- !query 2 schema
struct<1:tinyint>
-- !query 2 output
1


-- !query 3
select 127Y, -128Y
-- !query 3 schema
struct<127:tinyint,-128:tinyint>
-- !query 3 output
127	-128


-- !query 4
select 128Y
-- !query 4 schema
struct<>
-- !query 4 output
org.apache.spark.sql.catalyst.parser.ParseException

Numeric literal 128 does not fit in range [-128, 127] for type tinyint(line 1, pos 7)

== SQL ==
select 128Y
-------^^^


-- !query 5
select 1S
-- !query 5 schema
struct<1:smallint>
-- !query 5 output
1


-- !query 6
select 32767S, -32768S
-- !query 6 schema
struct<32767:smallint,-32768:smallint>
-- !query 6 output
32767	-32768


-- !query 7
select 32768S
-- !query 7 schema
struct<>
-- !query 7 output
org.apache.spark.sql.catalyst.parser.ParseException

Numeric literal 32768 does not fit in range [-32768, 32767] for type smallint(line 1, pos 7)

== SQL ==
select 32768S
-------^^^


-- !query 8
select 1L, 2147483648L
-- !query 8 schema
struct<1:bigint,2147483648:bigint>
-- !query 8 output
1	2147483648


-- !query 9
select 9223372036854775807L, -9223372036854775808L
-- !query 9 schema
struct<9223372036854775807:bigint,-9223372036854775808:bigint>
-- !query 9 output
9223372036854775807	-9223372036854775808


-- !query 10
select 9223372036854775808L
-- !query 10 schema
struct<>
-- !query 10 output
org.apache.spark.sql.catalyst.parser.ParseException

Numeric literal 9223372036854775808 does not fit in range [-9223372036854775808, 9223372036854775807] for type bigint(line 1, pos 7)

== SQL ==
select 9223372036854775808L
-------^^^


-- !query 11
select 1, -1
-- !query 11 schema
struct<1:int,-1:int>
-- !query 11 output
1	-1


-- !query 12
select 2147483647, -2147483648
-- !query 12 schema
struct<2147483647:int,-2147483648:int>
-- !query 12 output
2147483647	-2147483648


-- !query 13
select 9223372036854775807, -9223372036854775808
-- !query 13 schema
struct<9223372036854775807:bigint,-9223372036854775808:bigint>
-- !query 13 output
9223372036854775807	-9223372036854775808


-- !query 14
select 9223372036854775808, -9223372036854775809
-- !query 14 schema
struct<9223372036854775808:decimal(19,0),-9223372036854775809:decimal(19,0)>
-- !query 14 output
9223372036854775808	-9223372036854775809


-- !query 15
select 1234567890123456789012345678901234567890
-- !query 15 schema
struct<>
-- !query 15 output
org.apache.spark.sql.catalyst.parser.ParseException

decimal can only support precision up to 38
== SQL ==
select 1234567890123456789012345678901234567890


-- !query 16
select 1234567890123456789012345678901234567890.0
-- !query 16 schema
struct<>
-- !query 16 output
org.apache.spark.sql.catalyst.parser.ParseException

decimal can only support precision up to 38
== SQL ==
select 1234567890123456789012345678901234567890.0


-- !query 17
select 1D, 1.2D, 1e10, 1.5e5, .10D, 0.10D, .1e5, .9e+2, 0.9e+2, 900e-1, 9.e+1
-- !query 17 schema
struct<1.0:double,1.2:double,1E+10:decimal(1,-10),1.5E+5:decimal(2,-4),0.1:double,0.1:double,1E+4:decimal(1,-4),9E+1:decimal(1,-1),9E+1:decimal(1,-1),90.0:decimal(3,1),9E+1:decimal(1,-1)>
-- !query 17 output
1.0	1.2	10000000000	150000	0.1	0.1	10000	90	90	90	90


-- !query 18
select -1D, -1.2D, -1e10, -1.5e5, -.10D, -0.10D, -.1e5
-- !query 18 schema
struct<-1.0:double,-1.2:double,-1E+10:decimal(1,-10),-1.5E+5:decimal(2,-4),-0.1:double,-0.1:double,-1E+4:decimal(1,-4)>
-- !query 18 output
-1.0	-1.2	-10000000000	-150000	-0.1	-0.1	-10000


-- !query 19
select .e3
-- !query 19 schema
struct<>
-- !query 19 output
org.apache.spark.sql.catalyst.parser.ParseException

no viable alternative at input 'select .'(line 1, pos 7)

== SQL ==
select .e3
-------^^^


-- !query 20
select 1E309, -1E309
-- !query 20 schema
struct<1E+309:decimal(1,-309),-1E+309:decimal(1,-309)>
-- !query 20 output
1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000	-1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


-- !query 21
select 0.3, -0.8, .5, -.18, 0.1111, .1111
-- !query 21 schema
struct<0.3:decimal(1,1),-0.8:decimal(1,1),0.5:decimal(1,1),-0.18:decimal(2,2),0.1111:decimal(4,4),0.1111:decimal(4,4)>
-- !query 21 output
0.3	-0.8	0.5	-0.18	0.1111	0.1111


-- !query 22
select 123456789012345678901234567890123456789e10d, 123456789012345678901234567890123456789.1e10d
-- !query 22 schema
struct<1.2345678901234568E48:double,1.2345678901234568E48:double>
-- !query 22 output
1.2345678901234568E48	1.2345678901234568E48


-- !query 23
select "Hello Peter!", 'hello lee!'
-- !query 23 schema
struct<Hello Peter!:string,hello lee!:string>
-- !query 23 output
Hello Peter!	hello lee!


-- !query 24
select 'hello' 'world', 'hello' " " 'lee'
-- !query 24 schema
struct<helloworld:string,hello lee:string>
-- !query 24 output
helloworld	hello lee


-- !query 25
select "hello 'peter'"
-- !query 25 schema
struct<hello 'peter':string>
-- !query 25 output
hello 'peter'


-- !query 26
select 'pattern%', 'no-pattern\%', 'pattern\\%', 'pattern\\\%'
-- !query 26 schema
struct<pattern%:string,no-pattern\%:string,pattern\%:string,pattern\\%:string>
-- !query 26 output
pattern%	no-pattern\%	pattern\%	pattern\\%


-- !query 27
select '\'', '"', '\n', '\r', '\t', 'Z'
-- !query 27 schema
struct<':string,":string,
:string,:string,	:string,Z:string>
-- !query 27 output
'	"	
				Z


-- !query 28
select '\110\145\154\154\157\041'
-- !query 28 schema
struct<Hello!:string>
-- !query 28 output
Hello!


-- !query 29
select '\u0057\u006F\u0072\u006C\u0064\u0020\u003A\u0029'
-- !query 29 schema
struct<World :):string>
-- !query 29 output
World :)


-- !query 30
select dAte '2016-03-12'
-- !query 30 schema
struct<DATE '2016-03-12':date>
-- !query 30 output
2016-03-12


-- !query 31
select date 'mar 11 2016'
-- !query 31 schema
struct<>
-- !query 31 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the DATE value: mar 11 2016.(line 1, pos 7)

== SQL ==
select date 'mar 11 2016'
-------^^^


-- !query 32
select tImEstAmp '2016-03-11 20:54:00.000'
-- !query 32 schema
struct<TIMESTAMP('2016-03-11 20:54:00'):timestamp>
-- !query 32 output
2016-03-11 20:54:00


-- !query 33
select timestamp '2016-33-11 20:54:00.000'
-- !query 33 schema
struct<>
-- !query 33 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the TIMESTAMP value: 2016-33-11 20:54:00.000.(line 1, pos 7)

== SQL ==
select timestamp '2016-33-11 20:54:00.000'
-------^^^


-- !query 34
select GEO '(10,-6)'
-- !query 34 schema
struct<>
-- !query 34 output
org.apache.spark.sql.catalyst.parser.ParseException

DataType geo is not supported.(line 1, pos 0)

== SQL ==
GEO
^^^


-- !query 35
select 90912830918230182310293801923652346786BD, 123.0E-28BD, 123.08BD
-- !query 35 schema
struct<90912830918230182310293801923652346786:decimal(38,0),1.230E-26:decimal(29,29),123.08:decimal(5,2)>
-- !query 35 output
90912830918230182310293801923652346786	0.0000000000000000000000000123	123.08


-- !query 36
select 1.20E-38BD
-- !query 36 schema
struct<>
-- !query 36 output
org.apache.spark.sql.catalyst.parser.ParseException

decimal can only support precision up to 38(line 1, pos 7)

== SQL ==
select 1.20E-38BD
-------^^^


-- !query 37
select x'2379ACFe'
-- !query 37 schema
struct<X'2379ACFE':binary>
-- !query 37 output
#y��


-- !query 38
select X'XuZ'
-- !query 38 schema
struct<>
-- !query 38 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the X value: XuZ. contains illegal character for hexBinary: 0XuZ(line 1, pos 7)

== SQL ==
select X'XuZ'
-------^^^


-- !query 39
SELECT 3.14, -3.14, 3.14e8, 3.14e-8, -3.14e8, -3.14e-8, 3.14e+8, 3.14E8, 3.14E-8
-- !query 39 schema
struct<3.14:decimal(3,2),-3.14:decimal(3,2),3.14E+8:decimal(3,-6),3.14E-8:decimal(10,10),-3.14E+8:decimal(3,-6),-3.14E-8:decimal(10,10),3.14E+8:decimal(3,-6),3.14E+8:decimal(3,-6),3.14E-8:decimal(10,10)>
-- !query 39 output
3.14	-3.14	314000000	0.0000000314	-314000000	-0.0000000314	314000000	314000000	0.0000000314


-- !query 40
select integer '7'
-- !query 40 schema
struct<7:int>
-- !query 40 output
7


-- !query 41
select integer'7'
-- !query 41 schema
struct<7:int>
-- !query 41 output
7


-- !query 42
select integer '2147483648'
-- !query 42 schema
struct<>
-- !query 42 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the INTEGER value: 2147483648. For input string: "2147483648"(line 1, pos 7)

== SQL ==
select integer '2147483648'
-------^^^


-- !query 43
select -integer '7'
-- !query 43 schema
struct<-7:int>
-- !query 43 output
-7


-- !query 44
select -date '1999-01-01'
-- !query 44 schema
struct<>
-- !query 44 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the -DATE value: 1999-01-01.(line 1, pos 7)

== SQL ==
select -date '1999-01-01'
-------^^^


-- !query 45
select -timestamp '1999-01-01'
-- !query 45 schema
struct<>
-- !query 45 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the -TIMESTAMP value: 1999-01-01.(line 1, pos 7)

== SQL ==
select -timestamp '1999-01-01'
-------^^^


-- !query 46
select -x'2379ACFe'
-- !query 46 schema
struct<>
-- !query 46 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the -X value: 2379ACFe.(line 1, pos 7)

== SQL ==
select -x'2379ACFe'
-------^^^


-- !query 47
select +integer '7'
-- !query 47 schema
struct<7:int>
-- !query 47 output
7


-- !query 48
select boolean 'true'
-- !query 48 schema
struct<true:boolean>
-- !query 48 output
true


-- !query 49
select boolean 'false'
-- !query 49 schema
struct<false:boolean>
-- !query 49 output
false


-- !query 50
select boolean 't'
-- !query 50 schema
struct<true:boolean>
-- !query 50 output
true


-- !query 51
select boolean 'f'
-- !query 51 schema
struct<false:boolean>
-- !query 51 output
false


-- !query 52
select boolean 'yes'
-- !query 52 schema
struct<true:boolean>
-- !query 52 output
true


-- !query 53
select boolean 'no'
-- !query 53 schema
struct<false:boolean>
-- !query 53 output
false


-- !query 54
select -boolean 'true'
-- !query 54 schema
struct<>
-- !query 54 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the -BOOLEAN value: true.(line 1, pos 7)

== SQL ==
select -boolean 'true'
-------^^^


-- !query 55
select tinyint '1'
-- !query 55 schema
struct<1:tinyint>
-- !query 55 output
1


-- !query 56
select tinyint '-1'
-- !query 56 schema
struct<-1:tinyint>
-- !query 56 output
-1


-- !query 57
select tinyint '128'
-- !query 57 schema
struct<>
-- !query 57 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the TINYINT value: 128. Value out of range. Value:"128" Radix:10(line 1, pos 7)

== SQL ==
select tinyint '128'
-------^^^


-- !query 58
select byte '1'
-- !query 58 schema
struct<1:tinyint>
-- !query 58 output
1


-- !query 59
select -tinyint '1'
-- !query 59 schema
struct<-1:tinyint>
-- !query 59 output
-1


-- !query 60
select smallint '1'
-- !query 60 schema
struct<1:smallint>
-- !query 60 output
1


-- !query 61
select smallint '-1'
-- !query 61 schema
struct<-1:smallint>
-- !query 61 output
-1


-- !query 62
select smallint '32768'
-- !query 62 schema
struct<>
-- !query 62 output
org.apache.spark.sql.catalyst.parser.ParseException

Cannot parse the SMALLINT value: 32768. Value out of range. Value:"32768" Radix:10(line 1, pos 7)

== SQL ==
select smallint '32768'
-------^^^


-- !query 63
select short '1'
-- !query 63 schema
struct<1:smallint>
-- !query 63 output
1


-- !query 64
select -smallint '1'
-- !query 64 schema
struct<-1:smallint>
-- !query 64 output
-1


-- !query 65
select long '1'
-- !query 65 schema
struct<1:bigint>
-- !query 65 output
1


-- !query 66
select bigint '-1'
-- !query 66 schema
struct<-1:bigint>
-- !query 66 output
-1


-- !query 67
select -bigint '1'
-- !query 67 schema
struct<-1:bigint>
-- !query 67 output
-1


-- !query 68
select float '1'
-- !query 68 schema
struct<1.0:float>
-- !query 68 output
1.0


-- !query 69
select -float '-1'
-- !query 69 schema
struct<1.0:float>
-- !query 69 output
1.0


-- !query 70
select double '1'
-- !query 70 schema
struct<1.0:double>
-- !query 70 output
1.0


-- !query 71
select -double '1'
-- !query 71 schema
struct<-1.0:double>
-- !query 71 output
-1.0


-- !query 72
select char(10) 'SPARK-29896'
-- !query 72 schema
struct<SPARK-29896:string>
-- !query 72 output
SPARK-29896


-- !query 73
select varchar(10) 'SPARK-29896'
-- !query 73 schema
struct<SPARK-29896:string>
-- !query 73 output
SPARK-29896


-- !query 74
select binary 'SPARK-29896'
-- !query 74 schema
struct<X'535041524B2D3239383936':binary>
-- !query 74 output
SPARK-29896


-- !query 75
select decimal '1.000001'
-- !query 75 schema
struct<1:decimal(10,0)>
-- !query 75 output
1


-- !query 76
select decimal(10, 2) '11.1'
-- !query 76 schema
struct<11.10:decimal(10,2)>
-- !query 76 output
11.1


-- !query 77
select decimal(2, 0) '11.1'
-- !query 77 schema
struct<11:decimal(2,0)>
-- !query 77 output
11


-- !query 78
select decimal(2, 1) '11.1'
-- !query 78 schema
struct<>
-- !query 78 output
java.lang.ArithmeticException
Decimal precision 3 exceeds max precision 2


-- !query 79
select decimal(39, 1) '11.1'
-- !query 79 schema
struct<>
-- !query 79 output
org.apache.spark.sql.catalyst.parser.ParseException

decimal can only support precision up to 38
== SQL ==
DECIMAL(39,1)
